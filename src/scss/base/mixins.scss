//

//=====================================================================================================================================================================================================================================================================================================================================================================================================

$htmlFont: 16;
// Счет в относительные переменные
//TO %
@function prc($pxOne, $pxTwo) {
   $result: math.div($pxOne, $pxTwo) * 100%;
   @return $result;
}
//REM
@function rem($px) {
   $result: math.div($px, $htmlFont) + rem;
   @return $result;
}
//TO %
@function em($px) {
   $result: math.div($px, $htmlFont) + em;
   @return $result;
}

//=====================================================================================================================================================================================================================================================================================================================================================================================================

// // Адаптивное свойство
// @mixin adaptiv-value($property, $startSize, $minSize) {
//    $addSize: $startSize - $minSize;
//    @if $responsiveType==1 {
//       // Только если меньше контейнера
//       #{$property}: $startSize + px;
//       @media (max-width: #{$maxWidth + px}) {
//          #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
//       }
//    } @else if $responsiveType==2 {
//       // Только если больше контейнера
//       #{$property}: $startSize + px;
//       @media (min-width: #{$maxWidthContainer + px}) {
//          #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
//       }
//    } @else {
//       // Всегда
//       #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
//    }
// }

// Адаптивное свойство V2.0
@mixin adaptiv-value($property, $startSize, $endSize, $fromThisWidth, $toThisWidth:320) {
   $addSize: $startSize - $endSize;
   #{$property}: rem($startSize);
   @media (max-width: em($fromThisWidth)) and (min-width: em($toThisWidth)){
      #{$property}: calc(#{$endSize + px} + #{$addSize} * ((100vw - #{$toThisWidth + px}) / #{$fromThisWidth - $toThisWidth}));
   }







   // @if $responsiveType==1 {
   //    // Только если меньше контейнера
   //    #{$property}: $startSize + px;
   //    @media (max-width: #{$maxWidth + px}) {
   //       #{$property}: calc(#{$endSize + px} + #{$addSize} * ((100vw - #{$toThisWidth + px}) / #{$maxWidthContainer - $toThisWidth}));
   //    }
   // } @else if $responsiveType==2 {
   //    // Только если больше контейнера
   //    #{$property}: $startSize + px;
   //    @media (min-width: #{$maxWidthContainer + px}) {
   //       #{$property}: calc(#{$endSize + px} + #{$addSize} * ((100vw - #{$toThisWidth + px}) / #{$maxWidth - $toThisWidth}));
   //    }
   // } @else {
   //    // Всегда
   //    #{$property}: calc(#{$endSize + px} + #{$addSize} * ((100vw - #{$toThisWidth + px}) / #{$maxWidth - $toThisWidth}));
   // }
}

// Адаптивный шрифт
@mixin adaptiv-font($pcSize, $mobSize) {
   $addSize: $pcSize - $mobSize;
   $maxWidth: $maxWidth - 320;
   font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth}));
}
